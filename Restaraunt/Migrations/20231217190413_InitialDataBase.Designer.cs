// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaraunt.RestarauntSystem.DAL.DbContexts;

#nullable disable

namespace Restaraunt.Migrations
{
    [DbContext(typeof(RestarauntContext))]
    [Migration("20231217190413_InitialDataBase")]
    partial class InitialDataBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.Dish", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Dishies");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "A comforting and hearty dish featuring layers of tender chicken, sliced potatoes, caramelized onions, and a rich garlic-infused cream sauce. Baked until golden and bubbling, this gratin is the epitome of savory indulgence.",
                            Name = "Chicken and Potato Gratin"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "A light and nutritious dish that combines lean turkey with fresh spinach and creamy avocado. The turkey is seasoned to perfection, and the dish is topped with slices of ripe avocado for a burst of flavor and a touch of indulgence.",
                            Name = "Turkey with Spinach and Avocado"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "An elegant and flavorful dish featuring succulent baked salmon, accompanied by perfectly roasted potatoes and caramelized onions. The salmon is seasoned with herbs and spices, creating a harmonious blend of textures and tastes.",
                            Name = "Baked Salmon with Potato and Onion"
                        });
                });

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.Ingredient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Cucumber"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Spinach"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Salmon"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Avocado"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Onion"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Potato"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "Garlic"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "Chiken"
                        });
                });

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.IngredientDish", b =>
                {
                    b.Property<long>("DishId")
                        .HasColumnType("bigint");

                    b.Property<long>("IngredientId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.HasKey("DishId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("IngredientsDishies");
                });

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOrder")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.OrderDetail", b =>
                {
                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<long>("PortionId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.HasKey("OrderId", "PortionId");

                    b.HasIndex("PortionId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.Portion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("DishId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.ToTable("Portions");
                });

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.IngredientDish", b =>
                {
                    b.HasOne("Restaraunt.RestarauntSystem.DAL.Entities.Dish", "Dish")
                        .WithMany("IngredientsDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaraunt.RestarauntSystem.DAL.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientDishes")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.OrderDetail", b =>
                {
                    b.HasOne("Restaraunt.RestarauntSystem.DAL.Entities.Order", "Order")
                        .WithMany("OrdersDetail")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaraunt.RestarauntSystem.DAL.Entities.Portion", "Portion")
                        .WithMany("OrderDetails")
                        .HasForeignKey("PortionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Portion");
                });

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.Portion", b =>
                {
                    b.HasOne("Restaraunt.RestarauntSystem.DAL.Entities.Dish", "Dish")
                        .WithMany("Portions")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.Dish", b =>
                {
                    b.Navigation("IngredientsDishes");

                    b.Navigation("Portions");
                });

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.Ingredient", b =>
                {
                    b.Navigation("IngredientDishes");
                });

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.Order", b =>
                {
                    b.Navigation("OrdersDetail");
                });

            modelBuilder.Entity("Restaraunt.RestarauntSystem.DAL.Entities.Portion", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
